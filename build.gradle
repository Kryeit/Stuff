plugins {
    id 'fabric-loom' version '1.5.+'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.0+'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = 'Translations API'
        url = 'https://maven.nucleoid.xyz'
    }
    maven {
        name = 'LuckPerms'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://jitpack.io' }

    maven {
        name = 'GriefDefender'
        url = 'https://repo.glaremasters.me/repository/bloodshot'
    }
    maven {
        name = 'Patbox'
        url = 'https://maven.nucleoid.xyz'
    }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://maven.cafeteria.dev/releases" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    mavenCentral()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_fabric_version}")

    include(modImplementation("me.lucko:fabric-permissions-api:${luckperms_version}"))
    modImplementation "curse.maven:votifier-for-fabric-963421:5048168"

    compileOnly ("com.github.BlueMap-Minecraft:BlueMapAPI:v2.6.2")
    compileOnly "com.griefdefender:api:${griefdefender_version}"

    implementation 'com.clickhouse:clickhouse-jdbc:0.6.4:all'
    shadow 'com.clickhouse:clickhouse-jdbc:0.6.4:all'

    implementation 'org.jdbi:jdbi3-core:3.45.1'
    shadow 'org.jdbi:jdbi3-core:3.45.1'

    implementation "org.jdbi:jdbi3-jackson2:3.45.1"
    shadow "org.jdbi:jdbi3-jackson2:3.45.1"

    implementation 'org.postgresql:postgresql:42.7.2'
    shadow 'org.postgresql:postgresql:42.7.2'

    implementation 'com.zaxxer:HikariCP:5.1.0'
    shadow 'com.zaxxer:HikariCP:5.1.0'

    // Patbox stuff https://pb4.eu
    modImplementation include("eu.pb4:sgui:${project.sgui_version}")
    modImplementation include('eu.pb4:map-canvas-api:0.2.2+1.19.4')
    modImplementation 'eu.pb4:polymer-core:0.5.9+1.20.1'
    modImplementation 'eu.pb4:polymer-autohost:0.5.19+1.20.1'
    modImplementation 'eu.pb4:polymer-resource-pack:0.5.19+1.20.1'
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

loom {
    runs {
        datagen {
            server()
            name = "Data Generation"
            runDir = "build/datagen"
            vmArg("-Dfabric-api.datagen")
            vmArg("-Dfabric-api.datagen.output-dir=${file("src/main/generated")}")
            property "fabric-api.datagen.modid", "stuff"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    "src/main/generated"
            ]
        }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    mergeServiceFiles()
    exclude("META-INF")
}

tasks.build {
    dependsOn tasks.shadowJar
    dependsOn tasks.runDatagen
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
