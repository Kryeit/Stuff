plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = 'Translations API'
        url = 'https://maven.nucleoid.xyz'
    }
    maven {
        name = 'LuckPerms'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://jitpack.io' }

    maven {
        name = 'GriefDefender'
        url = 'https://repo.glaremasters.me/repository/bloodshot'
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include(modImplementation("me.lucko:fabric-permissions-api:${luckperms_version}"))
    modImplementation "curse.maven:votifier-for-fabric-963421:5048168"

    compileOnly ("com.github.BlueMap-Minecraft:BlueMapAPI:v2.6.2")
    compileOnly "com.griefdefender:api:${griefdefender_version}"

    implementation 'com.clickhouse:clickhouse-jdbc:0.6.4:all'
    shadow 'com.clickhouse:clickhouse-jdbc:0.6.4:all'

    implementation 'org.jdbi:jdbi3-core:3.45.1'
    shadow 'org.jdbi:jdbi3-core:3.45.1'

    implementation 'com.zaxxer:HikariCP:5.1.0'
    shadow 'com.zaxxer:HikariCP:5.1.0'
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    exclude("META-INF")
}

remapJar {
    // wait until the shadowJar is done
    dependsOn(shadowJar)
    mustRunAfter(shadowJar)
    // Set the input jar for the task. Here use the shadow Jar that include the .class of the transitive dependency
    inputFile = file(shadowJar.archivePath)
}

shadowJar {
    configurations = [project.configurations.shadow]
    mergeServiceFiles()  // Merges service files from dependencies
    exclude("META-INF")
}

tasks.build {
    dependsOn tasks.shadowJar  // Ensure shadowJar is built when running the build task
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
